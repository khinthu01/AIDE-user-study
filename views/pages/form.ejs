<body>
  <script>
    async function promptText() {
      const taskId = document.getElementById('taskId').value;
      const taskUrl = `http://localhost:3000/task/${taskId}`;

      axios.patch(taskUrl, { prompted: true });
      console.log('prompted!');
    }

    function playAudio() {
      var audio = document.getElementById('audio');
      audio.play();

      setTimeout(function () {
        promptText();
      }, 10000);
    }

    async function trackInput(questionID) {
      const inputChange = document.getElementById(`${questionID}`).value;
      var currentdate = new Date();
      var datetime =
        currentdate.getDate() +
        '/' +
        (currentdate.getMonth() + 1) +
        '/' +
        currentdate.getFullYear() +
        ' @ ' +
        currentdate.getHours() +
        ':' +
        currentdate.getMinutes() +
        ':' +
        currentdate.getSeconds();

      const change = {
        question: `${questionID}`,
        change: inputChange,
        time: datetime,
      };

      const taskId = document.getElementById('taskId').value;
      const participantId = document.getElementById('participantId').value;
      const url = 'http://localhost:3000/formChange';

      var formChanges = await axios.get(url);
      var formChangeData = formChanges.data;

      const anyTask = formChangeData.some(function (formChange) {
        return formChange._task === taskId;
      });

      if (anyTask) {
        const formChangeUrl = `http://localhost:3000/formChange/${taskId}`;
        formChanges = await axios.get(formChangeUrl);
        formChangeData = formChanges.data;

        const anyChange = formChangeData.some(function (formChange) {
          return formChange.participant_id === participantId;
        });

        if (anyChange) {
          const url = `http://localhost:3000/formChange/${taskId}/${participantId}`;

          axios.patch(url, { changes: change });
        } else {
          axios.post(url, {
            _task: taskId,
            participant_id: participantId,
            changes: [change],
          });
        }
      } else {
        axios.post(url, {
          _task: taskId,
          participant_id: participantId,
          changes: [change],
        });
      }
    }
  </script>

  <div class="container">
    <div class="text-center mt-5">
      <h1><%= pageTitle %></h1>
    </div>
    <div class="row">
      <div class="col-xl- mx-auto">
        <div class="card mt-2 bg-light">
          <div class="card-body bg-light">
            <div class="container">
              <label for="prompt_button" style="margin-top: 1em">
                <small>Shift+click this</small
                ><a href="http://localhost:3000/prompt/<%= taskformData._task %>"> link </a>
                <small
                  >to open the prompt page in a separate tab and place tab on the secondary
                  monitor.</small
                ><br />
              </label>

              <div style="margin-top: 1em">
                <h4>Instructions:</h4>
                <small
                  >Fill out the participant ID first and then press the play button to listen to the
                  audio. The questions are in the same order as information given by the audio.
                  There will be one question in the form where the information cannot be obtained
                  through the audio recording and you will have to anticipate an alert which will
                  signal that additional information relevant to the question is being given on the
                  prompt page. Please listen carefully as you cannot pause or rewind the audio and
                  attempt as many questions as possible.
                </small>
              </div>

              <label for="play_button" style="margin-top: 1em"
                ><small
                  >Please press the play button AFTER entering your participant ID when you're ready
                  to start the task.</small
                ></label
              >
              <button class="btn btn-primary btn-circle btn-sm" onclick="playAudio()">
                <audio id="audio" src="/audio/<%= taskData.audio_Url %>"></audio>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  fill="currentColor"
                  class="bi bi-play"
                  viewBox="0 0 16 16"
                >
                  <path
                    d="M10.804 8 5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z"
                  />
                </svg>
              </button>
              <form id="task-form" method="POST" action="/responses">
                <div class="controls">
                  <div class="row">
                    <div class="form-group">
                      <input
                        id="taskId"
                        type="hidden"
                        name="_task"
                        class="form-control"
                        value="<%= taskformData._task %>"
                      />
                    </div>
                  </div>
                  <div class="row">
                    <div class="form-group">
                      <input
                        type="hidden"
                        name="task_title"
                        class="form-control"
                        value="<%= taskformData.task_title %>"
                      />
                    </div>
                  </div>
                  <div class="row">
                    <div class="form-group">
                      <label
                        for="<%=
                      taskformData.participant_id %>"
                        ><%= taskformData.participant_id %>
                      </label>
                      <input
                        type="text"
                        id="participantId"
                        name="participant_id"
                        class="form-control"
                      />
                    </div>
                  </div>

                  <% for (const question in questions) { %>
                  <div class="row">
                    <div class="form-group">
                      <label for="<%= question %>"><%= questions[question] %> </label>
                      <input
                        type="text"
                        id="<%= question %>"
                        name="<%= question %>"
                        class="form-control"
                        onchange="trackInput('<%= question %>')"
                      />
                    </div>
                  </div>
                  <% } %>
                  <div class="row">
                    <div class="col-md-12" style="margin-top: 1em">
                      <input
                        type="submit"
                        class="btn btn-success btn-send pt-2 btn-block"
                        value="Submit Task"
                      />
                    </div>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
        <!-- /.8 -->
      </div>
      <!-- /.row-->
    </div>
  </div>
</body>
